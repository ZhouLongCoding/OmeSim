package omesim;

public class EntranceMain {

	public static void main(String[] args) {
		
		// user interface
		System.out.println("***********************************************************************\n"
				+ "OmeSim: Simulating phenotype and in-between-ome(s) based on genotype.\n"
				+ "***********************************************************************\n");
		if(args.length==0) {
			System.out.println("Usage: ");
			System.out.println("\tjava -Xmx4g -jar omesim.jar <function> <-parameter(s)>");
			System.out.println("Supported functions: ");
			System.out.println("\tSimulate");
			System.out.println("\tCausality");
			System.exit(0);
		}else if(args.length==1) {
			if(args[0].equals("Simulate")) {
				System.out.println("\t-input <parameter_file>");
				System.out.println("Please check users manual for the format, structure and an example of the parameter file.");
				
			}else if(args[0].equals("Causality")) {
				System.out.println("\t-causal_graph <causal_graph_file>");
				System.out.println("\t-triple_IDs <triple_IDs_file>");
				System.out.println("The causal_graph_file has been generated by Simulate."
						+ "\nPlease check users manual for the format of the triple_IDs_file.");
			}else {
				System.out.println("\tFunction "+args[0]+" does not exist.");
			}System.exit(0);
		}else {
			if(args[0].equals("Simulate")) {
				// load data
				System.out.println("===== Simulate Data =====");
				String parameter_file=null;
				for(int p=1;p<args.length;p++) {
					if(args[p].equals("-input")) parameter_file=args[p+1];
				}
				// The MainFrame constructor below does all things:
				// assign genotype matrix this.geno_G based on filters of MAF and location_distance. 
				// read in gene information. 
				// assign cis_variants to their genes. 
				// read in pathway information 
				// setup genetic-architectures (terms and their causality)
				// load terms 
				// iteratively calculate values and generating genuine correlation arrays
				// output all files (omics values, causality graph, and genuine correlations)
				MainFrame main_frame=new MainFrame(parameter_file);
				System.out.println("===== ALL DONE! =====");

			}else if(args[0].equals("Causality")) {
				System.out.println("===== Causality Check =====");
				String causal_graph_file=null;
				String triple_IDs_file=null;
				for(int p=1;p<args.length;p++) {
					if(args[p].equals("-causal_graph_file")) causal_graph_file=args[p+1];
					if(args[p].equals("-triple_IDs")) triple_IDs_file=args[p+1];
				}
				ArchitectureChecker checker= new ArchitectureChecker(causal_graph_file);
				checker.causal_check_file(triple_IDs_file, triple_IDs_file+".checked.txt");			
			}else {
				System.out.println("\tFunction "+args[1]+" does not exist.");
				System.exit(0);
			}
		}	
	}
 
}
